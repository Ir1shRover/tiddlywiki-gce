#!/bin/sh

# MIT License
# Copyright (c) 2018 Nicola Worthington <nicolaw@tfb.net>

set -ex

# Should we set DOMAIN to the external IP if it is not set?
#export DOMAIN="$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip")"

env

TWBASE="/var/lib/tiddlywiki"
HTDOCS="$TWBASE/htdocs"
LIVEPATH="/etc/letsencrypt/live/$DOMAIN"

#for var in $(env | awk -F= '{print $1}')
#do
#	if [ -z "$(eval "echo \$$var")" ]; then
#    eval "unset $var"
#  fi
#done

cd "$TWBASE"

if [ ! -e ~/.ssh/known_hosts ]; then
  for host in github.com gitlab.com bitbucket.org
  do
    ssh-keyscan $host >> ~/.ssh/known_hosts
  done
fi
chmod -R o-rwx,g-rwx ~/.ssh/

# Initialise the Git repository against the remote origin.
if [ ! -d "$TWBASE/.git" ]; then
  git init
fi

for name in "$GIT_AUTHOR_NAME" "$GIT_COMMITTER_NAME" "$GIT_USERNAME"
do
  if [ -n "$name" ]; then
    git config user.name "$name"
    break
  fi
done

for email in "$GIT_AUTHOR_EMAIL" "$GIT_COMMITTER_EMAIL" "$EMAIL"
do
  if [ -n "$email" ]; then
    git config user.email "$email"
    break
  fi
done

if [ -n "$GIT_REPOSITORY" ]; then
  if [ -n "$GIT_USERNAME" ]; then
    git config "credential.$GIT_REPOSITORY" "$GIT_USERNAME"
  fi

  if ! git remote | grep -qx origin; then
    git remote add origin "$GIT_REPOSITORY"
  fi
  git remote set-url origin "$GIT_REPOSITORY"
  git remote -v
  git fetch --all
  if git branch -a | grep -Ewq '(master|remotes/origin/master)$'; then
    git reset --hard origin/master
    git checkout master
  fi
fi

echo '**/$__StoryList.tid' > .gitignore

MYSIG="$(</dev/urandom tr -dc A-Za-z0-9-_ | head -c 16)"
if [ ! -d "$HTDOCS/.well-known" ]; then
  mkdir -p "$HTDOCS/.well-known"
fi
echo "$MYSIG" > "$HTDOCS/.well-known/tiddlywiki"

if [ -n "$GIT_PASSWORD" ] && [ -z "$GIT_ASKPASS" ]; then
	export GIT_ASKPASS="/usr/local/bin/git_askpass"
  echo "#!/bin/sh" > "$GIT_ASKPASS"
  echo "echo \"$GIT_PASSWORD\"" >> "$GIT_ASKPASS"
  chmod u+x "$GIT_ASKPASS"
fi

git config -l

# Launch cron daemon to schedule Git uploads and static website generation.
exec crond -l 6 -d 6 -f
